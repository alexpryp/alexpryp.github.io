{"version":3,"sources":["index.js"],"names":["mathOperations","a","b","roundNumber","number","length","numberOfCharactersAfterPoint","indexOf","toFixed","slice","allowedNumberOfCharacters","getSquareRoot","Math","sqrt","Calculator","props","state","value","secondValue","operator","float","negative","operatorEntered","resultDisplayed","handleValue","bind","event","operation","attributesObj","target","attributes","hasOwnProperty","this","dataValue","setState","dataOperator","result","className","onClick","data-operator","data-value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32746dae.chunk.js","sourcesContent":["import React, {  } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import { throwStatement, forInStatement } from '@babel/types';\n\n\nconst mathOperations = {\n    \"/\": function (a, b) {\n        return b / a;\n    },\n    \"*\": function (a, b) {\n        return b * a;\n    },\n    \"-\": function (a, b) {\n        return b - a;\n    },\n    \"+\": function (a, b) {\n        return b + a;\n    }\n}\n\nfunction roundNumber (number) {\n    const allowedNumberOfCharacters = 15;\n\n    if (number.length <= allowedNumberOfCharacters) {\n        return (+number);\n    }\n\n    number = +number;\n    if (number % 1) {\n        number = \"\" + number;\n        let pointPosition = number.indexOf(\".\") + 1;\n        let numberOfCharactersAfterPoint = allowedNumberOfCharacters - pointPosition;\n\n        if (numberOfCharactersAfterPoint < 0) {\n            numberOfCharactersAfterPoint = 0;\n        }\n        number = +number;\n\n        return +(number.toFixed(numberOfCharactersAfterPoint));\n    } else {\n        number = \"\" + number;\n        return number.slice(0, allowedNumberOfCharacters - 5) + \"E+\" + (number.length - (allowedNumberOfCharacters - 4));\n    }\n}\n\nfunction getSquareRoot (a) {\n    let result = Math.sqrt(+a);\n\n    return roundNumber(result);\n}\n\nfunction performOperation (a, b, operation) {\n    let result = 0;\n    \n    a = +a;\n    b = +b;\n\n    result = mathOperations[operation](a, b);\n\n    return roundNumber(\"\" + result);\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"0\",\n            secondValue: \"0\",\n            operator: \"\",\n            float: false,\n            negative: false,\n            operatorEntered: false,\n            resultDisplayed: false,\n        };\n\n        this.handleValue = this.handleValue.bind(this);\n    }\n\n    handleValue(event) {\n        const target = event.target;\n        const attributesObj = target.attributes;\n\n        if (attributesObj.hasOwnProperty(\"data-value\")) {\n\n            if (this.state.value.length >= 15) {\n                return;\n            };\n\n            const dataValue = attributesObj[\"data-value\"][\"value\"];\n\n            if (this.state.operatorEntered || this.state.resultDisplayed) {\n                this.setState({\n                    value: \"\",\n                    operatorEntered: false,\n                    resultDisplayed: false\n                });\n            }\n\n            if (dataValue === \".\" && this.state.float === false) {\n                this.setState((state) => ({\n                    value: state.value + dataValue,\n                    float: true,\n                }));\n            } else if (dataValue === \".\" && this.state.float === true) {\n                return;\n            } else if (dataValue === \"-+\" && this.state.negative === false) {\n                if (this.state.value === \"0\") {\n                    this.setState((state) => ({\n                        value: \"-\",\n                        negative: true,\n                    }));\n                } else {\n                    this.setState((state) => ({\n                        value: \"-\" + state.value,\n                        negative: true,\n                    }));\n                }\n            } else if(dataValue === \"-+\" && this.state.negative === true) {\n                this.setState((state) => ({\n                    value: state.value.slice(1),\n                    negative: false,\n                }));\n            } else if (this.state.value === \"0\") {\n                this.setState({value: dataValue});\n            } else {\n                this.setState((state) => ({value: state.value + dataValue}));\n            }\n        } else if (attributesObj.hasOwnProperty(\"data-operator\")) {\n            const dataOperator = attributesObj[\"data-operator\"][\"value\"];\n\n            if (dataOperator === \"c\") {\n                this.setState({\n                    value: \"0\",\n                    secondValue: \"0\",\n                    operator: \"\",\n                    float: false,\n                    negative: false,\n                    operatorEntered: false,\n                    resultDisplayed: false,\n                });\n            } else if (dataOperator === \"backspace\") {\n                if (this.state.value === \"0\") {\n                    return;\n                } else if (this.state.value === \"-\" || this.state.value.length === 1 ) {\n                    this.setState({\n                        value: \"0\",\n                        float: false,\n                        negative: false,\n                    });\n                } else if (this.state.value[this.state.value.length - 1] === \".\") {\n                    this.setState((state) => ({\n                        value: state.value.slice(0, -1),\n                        float: false,\n                    }));\n                } else {\n                    this.setState((state) => ({value: state.value.slice(0, -1)}));\n                }\n            } else if (dataOperator === \"=\") {\n                if (this.state.operator === \"\") {\n                    return;\n                } else {\n                    const result = performOperation(this.state.value, this.state.secondValue, this.state.operator);\n\n                    this.setState((state) => ({\n                        value: \"\" + result,\n                        secondValue: \"\",\n                        operator: \"\",\n                        float: false,\n                        negative: false,\n                        operatorEntered: false,\n                        resultDisplayed: true,\n                    }));\n                }\n            } else if (dataOperator === \"sqrt\") {\n                this.setState((state) => ({\n                    value: \"\" + getSquareRoot(state.value),\n                    operator: \"\",\n                    operatorEntered: false,\n                    float: false,\n                    negative: false,\n                    resultDisplayed: true,\n                }));\n            } else {\n                this.setState((state) => ({\n                    secondValue: state.value,\n                    value: \"0\",\n                    operator: dataOperator,\n                    operatorEntered: true,\n                    float: false,\n                    negative: false,\n                }));\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\">\n                <div className=\"indicator\">\n                    <div className=\"battery\">\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                    </div>\n                    <div className=\"logo\">CALCULATOR</div>\n                </div>\n                <div className=\"display\">{this.state.value}</div>\n                <div className=\"buttons-panel\" onClick={this.handleValue}>\n                    <div className=\"buttons-row\">\n                        <button className=\"button-blue\" data-operator=\"c\">C</button>\n                        <button className=\"dark-grey\" data-operator=\"/\">&#247;</button>\n                        <button className=\"dark-grey\" data-operator=\"*\">&#215;</button>\n                        <button className=\"dark-grey backspace-button\" data-operator=\"backspace\"><i className=\"fa fa-backspace\" data-operator=\"backspace\"></i></button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"7\">7</button>\n                        <button data-value=\"8\">8</button>\n                        <button data-value=\"9\">9</button>\n                        <button className=\"dark-grey\" data-operator=\"-\">&#8722;</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"4\">4</button>\n                        <button data-value=\"5\">5</button>\n                        <button data-value=\"6\">6</button>\n                        <button className=\"dark-grey\" data-operator=\"+\">+</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"1\">1</button>\n                        <button data-value=\"2\">2</button>\n                        <button data-value=\"3\">3</button>\n                        <button className=\"dark-grey\" data-operator=\"sqrt\">&#8730;</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"0\">0</button>\n                        <button data-value=\".\">.</button>\n                        <button data-value=\"-+\">&#177;</button>\n                        <button className=\"button-orange\" data-operator=\"=\">=</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n"],"sourceRoot":""}