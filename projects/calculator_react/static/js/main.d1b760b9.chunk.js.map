{"version":3,"sources":["index.js"],"names":["mathOperations","a","b","roundNumber","number","length","numberOfCharactersAfterPoint","indexOf","toFixed","slice","allowedNumberOfCharacters","getSquareRoot","Math","sqrt","Calculator","props","state","value","secondValue","operator","float","negative","operatorEntered","resultDisplayed","handleMouseDown","bind","handleMouseUp","handleValue","event","target","attributesObj","attributes","dataset","closest","classList","add","hasOwnProperty","contains","remove","operation","this","dataValue","setState","dataOperator","result","className","onClick","onMouseDown","onMouseUp","data-operator","data-value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1b760b9.chunk.js","sourcesContent":["import React, {  } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import { throwStatement, forInStatement } from '@babel/types';\n\n\nconst mathOperations = {\n    \"/\": function (a, b) {\n        return b / a;\n    },\n    \"*\": function (a, b) {\n        return b * a;\n    },\n    \"-\": function (a, b) {\n        return b - a;\n    },\n    \"+\": function (a, b) {\n        return b + a;\n    }\n}\n\nfunction roundNumber (number) {\n    const allowedNumberOfCharacters = 15;\n\n    if (number.length <= allowedNumberOfCharacters) {\n        return (+number);\n    }\n\n    number = +number;\n    if (number % 1) {\n        number = \"\" + number;\n        let pointPosition = number.indexOf(\".\") + 1;\n        let numberOfCharactersAfterPoint = allowedNumberOfCharacters - pointPosition;\n\n        if (numberOfCharactersAfterPoint < 0) {\n            numberOfCharactersAfterPoint = 0;\n        }\n        number = +number;\n\n        return +(number.toFixed(numberOfCharactersAfterPoint));\n    } else {\n        number = \"\" + number;\n        return number.slice(0, allowedNumberOfCharacters - 5) + \"E+\" + (number.length - (allowedNumberOfCharacters - 4));\n    }\n}\n\nfunction getSquareRoot (a) {\n    let result = Math.sqrt(+a);\n\n    return roundNumber(result);\n}\n\nfunction performOperation (a, b, operation) {\n    let result = 0;\n    \n    a = +a;\n    b = +b;\n\n    result = mathOperations[operation](a, b);\n\n    return roundNumber(\"\" + result);\n}\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"0\",\n            secondValue: \"0\",\n            operator: \"\",\n            float: false,\n            negative: false,\n            operatorEntered: false,\n            resultDisplayed: false,\n        };\n\n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.handleValue = this.handleValue.bind(this);\n    }\n\n    // add button click effect\n    handleMouseDown(event) {\n        const target = event.target;\n        const attributesObj = target.attributes;\n\n        if (target.dataset.operator === \"backspace\") {\n            target.closest(\"button.backspace-button\").classList.add(\"dark-grey-click\");\n        } else if (attributesObj.hasOwnProperty(\"data-value\")) {\n            target.classList.add(\"button-click\"); \n        } else if (attributesObj.hasOwnProperty(\"data-operator\")) {\n            if (target.classList.contains(\"dark-grey\")) {\n                target.classList.add(\"dark-grey-click\");\n            } else if (target.classList.contains(\"button-blue\")) {\n                target.classList.add(\"button-blue-click\");\n            } else if (target.classList.contains(\"button-orange\")) {\n                target.classList.add(\"button-orange-click\");\n            }\n        }\n    }\n\n    // remove button click effect\n    handleMouseUp(event) {\n        const target = event.target;\n        const attributesObj = target.attributes;\n\n        if (target.dataset.operator === \"backspace\") {\n            target.closest(\"button.backspace-button\").classList.remove(\"dark-grey-click\");\n        } else if (attributesObj.hasOwnProperty(\"data-value\")) {\n            target.classList.remove(\"button-click\"); \n        } else if (attributesObj.hasOwnProperty(\"data-operator\")) {\n            if (target.classList.contains(\"dark-grey\")) {\n                target.classList.remove(\"dark-grey-click\");\n            } else if (target.classList.contains(\"button-blue\")) {\n                target.classList.remove(\"button-blue-click\");\n            } else if (target.classList.contains(\"button-orange\")) {\n                target.classList.remove(\"button-orange-click\");\n            }\n        }\n    }\n\n    handleValue(event) {\n        const target = event.target;\n        const attributesObj = target.attributes;\n\n        if (attributesObj.hasOwnProperty(\"data-value\")) {\n\n            if (this.state.value.length >= 15) {\n                return;\n            };\n\n            const dataValue = attributesObj[\"data-value\"][\"value\"];\n\n            if (this.state.operatorEntered || this.state.resultDisplayed) {\n                this.setState({\n                    value: \"\",\n                    operatorEntered: false,\n                    resultDisplayed: false\n                });\n            }\n\n            if (dataValue === \".\" && this.state.float === false) {\n                this.setState((state) => ({\n                    value: state.value + dataValue,\n                    float: true,\n                }));\n            } else if (dataValue === \".\" && this.state.float === true) {\n                return;\n            } else if (dataValue === \"-+\" && this.state.negative === false) {\n                if (this.state.value === \"0\") {\n                    this.setState((state) => ({\n                        value: \"-\",\n                        negative: true,\n                    }));\n                } else {\n                    this.setState((state) => ({\n                        value: \"-\" + state.value,\n                        negative: true,\n                    }));\n                }\n            } else if(dataValue === \"-+\" && this.state.negative === true) {\n                this.setState((state) => ({\n                    value: state.value.slice(1),\n                    negative: false,\n                }));\n            } else if (this.state.value === \"0\") {\n                this.setState({value: dataValue});\n            } else {\n                this.setState((state) => ({value: state.value + dataValue}));\n            }\n        } else if (attributesObj.hasOwnProperty(\"data-operator\")) {\n            const dataOperator = attributesObj[\"data-operator\"][\"value\"];\n\n            if (dataOperator === \"c\") {\n                this.setState({\n                    value: \"0\",\n                    secondValue: \"0\",\n                    operator: \"\",\n                    float: false,\n                    negative: false,\n                    operatorEntered: false,\n                    resultDisplayed: false,\n                });\n            } else if (dataOperator === \"backspace\") {\n                if (this.state.value === \"0\") {\n                    return;\n                } else if (this.state.value === \"-\" || this.state.value.length === 1 ) {\n                    this.setState({\n                        value: \"0\",\n                        float: false,\n                        negative: false,\n                    });\n                } else if (this.state.value[this.state.value.length - 1] === \".\") {\n                    this.setState((state) => ({\n                        value: state.value.slice(0, -1),\n                        float: false,\n                    }));\n                } else {\n                    this.setState((state) => ({value: state.value.slice(0, -1)}));\n                }\n            } else if (dataOperator === \"=\") {\n                if (this.state.operator === \"\") {\n                    return;\n                } else {\n                    const result = performOperation(this.state.value, this.state.secondValue, this.state.operator);\n\n                    this.setState((state) => ({\n                        value: \"\" + result,\n                        secondValue: \"\",\n                        operator: \"\",\n                        float: false,\n                        negative: false,\n                        operatorEntered: false,\n                        resultDisplayed: true,\n                    }));\n                }\n            } else if (dataOperator === \"sqrt\") {\n                this.setState((state) => ({\n                    value: \"\" + getSquareRoot(state.value),\n                    operator: \"\",\n                    operatorEntered: false,\n                    float: false,\n                    negative: false,\n                    resultDisplayed: true,\n                }));\n            } else {\n                this.setState((state) => ({\n                    secondValue: state.value,\n                    value: \"0\",\n                    operator: dataOperator,\n                    operatorEntered: true,\n                    float: false,\n                    negative: false,\n                }));\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"calculator\">\n                <div className=\"indicator\">\n                    <div className=\"battery\">\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                        <div className=\"cell\"></div>\n                    </div>\n                    <div className=\"logo\">CALCULATOR</div>\n                </div>\n                <div className=\"display\">{this.state.value}</div>\n                <div className=\"buttons-panel\" \n                    onClick={this.handleValue} \n                    onMouseDown={this.handleMouseDown}\n                    onMouseUp={this.handleMouseUp}\n                >\n                    <div className=\"buttons-row\">\n                        <button className=\"button-blue\" data-operator=\"c\">C</button>\n                        <button className=\"dark-grey\" data-operator=\"/\">&#247;</button>\n                        <button className=\"dark-grey\" data-operator=\"*\">&#215;</button>\n                        <button className=\"dark-grey backspace-button\" data-operator=\"backspace\"><i className=\"fa fa-backspace\" data-operator=\"backspace\"></i></button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"7\">7</button>\n                        <button data-value=\"8\">8</button>\n                        <button data-value=\"9\">9</button>\n                        <button className=\"dark-grey\" data-operator=\"-\">&#8722;</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"4\">4</button>\n                        <button data-value=\"5\">5</button>\n                        <button data-value=\"6\">6</button>\n                        <button className=\"dark-grey\" data-operator=\"+\">+</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"1\">1</button>\n                        <button data-value=\"2\">2</button>\n                        <button data-value=\"3\">3</button>\n                        <button className=\"dark-grey\" data-operator=\"sqrt\">&#8730;</button>\n                    </div>\n                    <div className=\"buttons-row\">\n                        <button data-value=\"0\">0</button>\n                        <button data-value=\".\">.</button>\n                        <button data-value=\"-+\">&#177;</button>\n                        <button className=\"button-orange\" data-operator=\"=\">=</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n"],"sourceRoot":""}