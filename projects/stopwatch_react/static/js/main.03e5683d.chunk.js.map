{"version":3,"sources":["additionalFunctions.js","App.js","index.js"],"names":["formatTime","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","Math","round","MainTimer","props","useEffect","timerState","timerId","setTimeout","time","Date","startTime","setCalculatedTime","setMainTimer","amountOfCalculatedTime","calculatedTime","clearTimeout","formTime","mainTimer","className","IntervalHistory","intervalHistory","length","intervHist","map","index","ind","formMainTime","formLapTime","key","toString","buttonBlock","ButtonBlock","setButtonBlock","onClick","setTimerState","setAmountOfCalculatedTime","lap","startLapTime","setStartLapTime","setIntervalHistory","intervalHandler","setStartTime","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAO,SAASA,EAAWC,GACvB,IAAIC,EAAQD,EAAKE,cACbC,EAAUH,EAAKI,gBACfC,EAAUL,EAAKM,gBACfC,EAAeP,EAAKQ,qBAoBxB,OAlBIP,EAAQ,KACRA,EAAQ,IAAMA,GAEdE,EAAU,KACVA,EAAU,IAAMA,GAEhBE,EAAU,KACVA,EAAU,IAAMA,GAEhBE,EAAe,GACfA,EAAe,IAAMA,EACdA,EAAe,IAEF,MADpBA,GAAgBE,KAAKC,MAAMH,EAAe,OAEtCA,EAAe,IAIhB,CAACN,QAAOE,UAASE,UAASE,gBCrBrC,SAASI,EAAUC,GAClBC,qBAAU,WACT,GAAyB,UAArBD,EAAME,YAA+C,SAArBF,EAAME,WAA1C,CAIA,IAAIC,EAAUC,YAAW,WACxB,IAAIC,EAAO,IAAIC,KAASN,EAAMO,UAC9BP,EAAMQ,kBAAmBH,GACzBL,EAAMS,aACL,IAAIH,KAAKN,EAAMU,uBAAyBV,EAAMW,mBAE7C,KAEH,OAAO,WACNC,aAAaT,QAIf,IAAIU,EAAW1B,EAAWa,EAAMc,WAEhC,OACE,yBAAKC,UAAU,cACd,8BAAOF,EAASxB,OADjB,IAEC,8BAAOwB,EAAStB,SAFjB,IAGC,8BAAOsB,EAASpB,SAHjB,IAGiC,0BAAMsB,UAAU,gBAAgBF,EAASlB,eAK7E,SAASqB,EAAgBhB,GACxB,IAAIiB,EAAe,YAAOjB,EAAMiB,iBAEhC,GAAIA,EAAgBC,OAAS,EAAG,CAC/B,IAAIC,EAAaF,EAAgBG,KAAI,SAACf,EAAMgB,GAC3C,IAAIC,EAAMD,EAAQ,EACfC,EAAM,KACRA,EAAM,IAAMA,GAGb,IAAIC,EAAepC,EAAWkB,EAAK,IAC/BmB,EAAcrC,EAAW,IAAImB,KAAKD,EAAK,KAE3C,OAAQ,yBAAKoB,IAAKH,EAAII,YACrB,0BAAMX,UAAU,SAASO,GADlB,MACgC,0BAAMP,UAAU,sBACtD,8BAAOQ,EAAalC,OADkB,IAEtC,8BAAOkC,EAAahC,SAFkB,IAGtC,8BAAOgC,EAAa9B,SAHkB,IAItC,8BAAO8B,EAAa5B,eALd,MAMG,0BAAMoB,UAAU,qBACzB,8BAAOS,EAAYnC,OADV,IAET,8BAAOmC,EAAYjC,SAFV,IAGT,8BAAOiC,EAAY/B,SAHV,KAG2B,0BAAMsB,UAAU,gBAAgBS,EAAY7B,mBAKnF,OACC,yBAAKoB,UAAU,oBACbI,GAGG,MAA0B,SAAtBnB,EAAM2B,aAAgD,YAAtB3B,EAAM2B,YAE/C,yBAAKZ,UAAU,oBACd,yBAAKA,UAAU,+BACd,+CAED,yBAAKA,UAAU,iCACd,ofAMF,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,+BACd,+CAED,yBAAKA,UAAU,iCACd,gUAOL,SAASa,EAAY5B,GACGA,EAAM6B,eAmC7B,OAAQ7B,EAAM2B,aACb,IAAM,OACL,OACA,yBAAKZ,UAAU,iBACd,6BACA,4BAAQA,UAAU,OAAOe,QAAU,kBA9BrC9B,EAAM+B,cAAc,QACpB/B,EAAM6B,eAAe,gBACrB7B,EAAMgC,0BAA0BhC,EAAMU,uBAAyBV,EAAMW,kBA4BnE,4BAGA,4BAAQI,UAAU,WAAWe,QAAU,kBA5B1C,WACC,IAAIG,EAAMjC,EAAMc,UAAYd,EAAMkC,aAClClC,EAAMmC,gBAAgBnC,EAAMc,WAC5Bd,EAAMoC,mBAAN,sBAA6BpC,EAAMiB,iBAAnC,CAAoD,CAACjB,EAAMc,UAAWmB,MAyBvBI,KAA7C,qDAKF,IAAM,UACL,OACA,yBAAKtB,UAAU,iBACd,6BACA,4BAAQA,UAAU,UAAUe,QAAU,kBA9BxC9B,EAAM+B,cAAc,SACpB/B,EAAMsC,aAAa,IAAIhC,WACvBN,EAAM6B,eAAe,UA4BnB,8CAGA,4BAAQd,UAAU,YAAYe,QAAU,kBA3B1C9B,EAAM6B,eAAe,SACrB7B,EAAMgC,0BAA0B,GAChChC,EAAMQ,kBAAkB,GACxBR,EAAMS,aAAa,IAAIH,KAAK,SAC5BN,EAAMoC,mBAAmB,MAuBvB,mCAIF,IAAM,QACN,QACC,OACC,yBAAKrB,UAAU,iBACd,6BACA,4BAAQA,UAAU,QAAQe,QAAU,kBA7DvC9B,EAAM+B,cAAc,SACpB/B,EAAMsC,aAAa,IAAIhC,MACvBN,EAAMmC,gBAAgBnC,EAAMc,gBAC5Bd,EAAM6B,eAAe,UA0DlB,0CA6DUU,MArDf,WAAgB,IAAD,EACsBC,mBAAS,SAD/B,mBACPtC,EADO,KACK6B,EADL,OAEoBS,mBAAS,IAAIlC,MAFjC,mBAEPC,EAFO,KAEI+B,EAFJ,OAG0BE,mBAAS,IAAIlC,MAHvC,mBAGP4B,EAHO,KAGOC,EAHP,OAIoBK,mBAAS,IAAIlC,KAAK,IAJtC,mBAIPQ,EAJO,KAIIL,EAJJ,OAK8B+B,mBAAS,GALvC,mBAKP7B,EALO,KAKSH,EALT,OAM8CgC,mBAAS,GANvD,mBAMP9B,EANO,KAMiBsB,EANjB,OAOwBQ,mBAAS,SAPjC,mBAOPb,EAPO,KAOME,EAPN,OAQgCW,mBAAS,IARzC,mBAQPvB,EARO,KAQUmB,EARV,KAUd,OACC,yBAAKrB,UAAU,OACd,kBAAChB,EAAD,CACCG,WAAYA,EACZ6B,cAAeA,EACfxB,UAAWA,EACX+B,aAAcA,EACdJ,aAAcA,EACdC,gBAAiBA,EACjBrB,UAAWA,EACXL,aAAcA,EACdE,eAAgBA,EAChBH,kBAAmBA,EACnBE,uBAAwBA,EACxBsB,0BAA2BA,IAE5B,kBAAChB,EAAD,CACCC,gBAAiBA,EACjBmB,mBAAoBA,EACpBT,YAAaA,IAEd,kBAACC,EAAD,CACCD,YAAaA,EACbE,eAAgBA,EAChB3B,WAAYA,EACZ6B,cAAeA,EACfxB,UAAWA,EACX+B,aAAcA,EACdJ,aAAcA,EACdC,gBAAiBA,EACjBrB,UAAWA,EACXL,aAAcA,EACdE,eAAgBA,EAChBH,kBAAmBA,EACnBE,uBAAwBA,EACxBsB,0BAA2BA,EAC3Bf,gBAAiBA,EACjBmB,mBAAoBA,MC7MxBK,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.03e5683d.chunk.js","sourcesContent":["export function formatTime(date) {\r\n    let hours = date.getUTCHours();\r\n    let minutes = date.getUTCMinutes();\r\n    let seconds = date.getUTCSeconds();\r\n    let milliseconds = date.getUTCMilliseconds();\r\n\r\n    if (hours < 10) {\r\n        hours = '0' + hours;\r\n    }\r\n    if (minutes < 10) {\r\n        minutes = '0' + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n        seconds = '0' + seconds;\r\n    }\r\n    if (milliseconds < 10) {\r\n        milliseconds = '0' + milliseconds;\r\n    } else if (milliseconds > 99) {\r\n        milliseconds = +Math.round(milliseconds / 10);\r\n        if (milliseconds == 100) {\r\n            milliseconds = 10;\r\n        }\r\n    }\r\n\r\n    return {hours, minutes, seconds, milliseconds};\r\n}","import React, { useState, useEffect } from 'react';\nimport { formatTime } from './additionalFunctions.js';\n\nfunction MainTimer(props) {\n\tuseEffect(() => {\n\t\tif (props.timerState === 'clean' || props.timerState === 'stop') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet timerId = setTimeout(() => {\n\t\t\tlet time = new Date() - props.startTime;\n\t\t\tprops.setCalculatedTime( time );\n\t\t\tprops.setMainTimer(\n\t\t\t\tnew Date(props.amountOfCalculatedTime + props.calculatedTime)\n\t\t\t);\n\t\t}, 200);\n\n\t\treturn function cleanup() {\n\t\t\tclearTimeout(timerId);\n\t\t} \n\t});\n\n\tlet formTime = formatTime(props.mainTimer);\n\n\treturn (\n\t\t\t<div className=\"main-timer\">\n\t\t\t\t<span>{formTime.hours}</span>:\n\t\t\t\t<span>{formTime.minutes}</span>:\n\t\t\t\t<span>{formTime.seconds}</span> <span className=\"milliseconds\">{formTime.milliseconds}</span>\n\t\t\t</div>\n\t);\n}\n\nfunction IntervalHistory(props) {\n\tlet intervalHistory = [...props.intervalHistory]\n\n\tif (intervalHistory.length > 0) {\n\t\tlet intervHist = intervalHistory.map((time, index) => {\n\t\t\tlet ind = index + 1;\n\t\t\tif(ind < 10) {\n\t\t\t\tind = '0' + ind;\n\t\t\t}\n\n\t\t\tlet formMainTime = formatTime(time[0]);\n\t\t\tlet formLapTime = formatTime(new Date(time[1]));\n\n\t\t\treturn (<div key={ind.toString()}>\n\t\t\t\t<span className=\"index\">{ind}</span> | <span className=\"main-timer-history\">\n\t\t\t\t\t<span>{formMainTime.hours}</span>:\n\t\t\t\t\t<span>{formMainTime.minutes}</span>:\n\t\t\t\t\t<span>{formMainTime.seconds}</span>:\n\t\t\t\t\t<span>{formMainTime.milliseconds}</span>\n\t\t\t\t</span> | <span className=\"lap-timer-history\">\n\t\t\t\t\t<span>{formLapTime.hours}</span>:\n\t\t\t\t\t<span>{formLapTime.minutes}</span>:\n\t\t\t\t\t<span>{formLapTime.seconds}</span>. <span className=\"milliseconds\">{formLapTime.milliseconds}</span>\n\t\t\t\t</span>\n\t\t\t</div>);\n\t\t});\n\t\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t{intervHist}\n\t\t\t</div>\n\t\t);\n\t} else if (props.buttonBlock === 'stop' || props.buttonBlock === 'restart') {\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t<div className=\"interval-history-background\">\n\t\t\t\t\t<span>&#x1F551;</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval-history-instructions\">\n\t\t\t\t\t<span>После нажатия кнопки \"Интервал\" появятся данные о времени, затраченном на каждый Интервал</span>\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t<div className=\"interval-history-background\">\n\t\t\t\t\t<span>&#x1F551;</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval-history-instructions\">\n\t\t\t\t\t<span>После нажатия кнопки \"Начать\" секундомер начнет отсчет</span>\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction ButtonBlock(props) {\n\tconst setButtonBlock = props.setButtonBlock;\n\t\n\tfunction startHandler() {\n\t\tprops.setTimerState('start');\n\t\tprops.setStartTime(new Date());\n\t\tprops.setStartLapTime(props.mainTimer);\n\t\tprops.setButtonBlock(\"stop\");\n\t}\n\n\tfunction stopHandler() {\n\t\tprops.setTimerState('stop');\n\t\tprops.setButtonBlock(\"restart\");\n\t\tprops.setAmountOfCalculatedTime(props.amountOfCalculatedTime + props.calculatedTime);\n\t}\n\n\tfunction intervalHandler() {\n\t\tlet lap = props.mainTimer - props.startLapTime;\n\t\tprops.setStartLapTime(props.mainTimer);\n\t\tprops.setIntervalHistory([...props.intervalHistory, [props.mainTimer, lap]]);\n\t}\n\n\tfunction restartHandler() {\n\t\tprops.setTimerState('start');\n\t\tprops.setStartTime(new Date());\n\t\tprops.setButtonBlock(\"stop\");\n\t}\n\n\tfunction dischargeHandler() {\n\t\tprops.setButtonBlock(\"start\");\n\t\tprops.setAmountOfCalculatedTime(0);\n\t\tprops.setCalculatedTime(0);\n\t\tprops.setMainTimer(new Date(0));\n\t\tprops.setIntervalHistory([]);\n\t}\n\n\tswitch (props.buttonBlock) {\n\t\tcase ('stop'):\n\t\t\treturn (\n\t\t\t<div className=\"buttons-block\">\n\t\t\t\t<hr/>\n\t\t\t\t<button className=\"stop\" onClick={ () => stopHandler() }>\n\t\t\t\t\tСтоп\n\t\t\t\t</button>\n\t\t\t\t<button className=\"interval\" onClick={ () => intervalHandler() }>\n\t\t\t\t\tИнтервал\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t);\n\t\tcase ('restart'):\n\t\t\treturn (\n\t\t\t<div className=\"buttons-block\">\n\t\t\t\t<hr/>\n\t\t\t\t<button className=\"restart\" onClick={ () => restartHandler() }>\n\t\t\t\t\tРестарт\n\t\t\t\t</button>\n\t\t\t\t<button className=\"discharge\" onClick={ () => dischargeHandler(setButtonBlock) }>\n\t\t\t\t\tСброс\n\t\t\t\t</button>\n\t\t\t</div>);\n\t\tcase ('start'):\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<div className=\"buttons-block\">\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<button className=\"start\" onClick={ () => startHandler() }>\n\t\t\t\t\t\tНачать\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nfunction App() {\n\tconst [timerState, setTimerState] = useState('clean');\n\tconst [startTime, setStartTime] = useState(new Date());\n\tconst [startLapTime, setStartLapTime] = useState(new Date());\n\tconst [mainTimer, setMainTimer] = useState(new Date(0));\n\tconst [calculatedTime, setCalculatedTime] = useState(0);\n\tconst [amountOfCalculatedTime, setAmountOfCalculatedTime] = useState(0);\n\tconst [buttonBlock, setButtonBlock] = useState('start');\n\tconst [intervalHistory, setIntervalHistory] = useState([]);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<MainTimer \n\t\t\t\ttimerState={timerState}\n\t\t\t\tsetTimerState={setTimerState}\n\t\t\t\tstartTime={startTime} \n\t\t\t\tsetStartTime={setStartTime} \n\t\t\t\tstartLapTime={startLapTime}\n\t\t\t\tsetStartLapTime={setStartLapTime}\n\t\t\t\tmainTimer={mainTimer}\n\t\t\t\tsetMainTimer={setMainTimer}\n\t\t\t\tcalculatedTime={calculatedTime}\n\t\t\t\tsetCalculatedTime={setCalculatedTime}\n\t\t\t\tamountOfCalculatedTime={amountOfCalculatedTime}\n\t\t\t\tsetAmountOfCalculatedTime={setAmountOfCalculatedTime}\n\t\t\t/>\n\t\t\t<IntervalHistory\n\t\t\t\tintervalHistory={intervalHistory}\n\t\t\t\tsetIntervalHistory={setIntervalHistory}\n\t\t\t\tbuttonBlock={buttonBlock}\n\t\t\t/>\n\t\t\t<ButtonBlock\n\t\t\t\tbuttonBlock={buttonBlock}\n\t\t\t\tsetButtonBlock={setButtonBlock}\n\t\t\t\ttimerState={timerState}\n\t\t\t\tsetTimerState={setTimerState}\n\t\t\t\tstartTime={startTime}\n\t\t\t\tsetStartTime={setStartTime}\n\t\t\t\tstartLapTime={startLapTime}\n\t\t\t\tsetStartLapTime={setStartLapTime}\n\t\t\t\tmainTimer={mainTimer}\n\t\t\t\tsetMainTimer={setMainTimer}\n\t\t\t\tcalculatedTime={calculatedTime}\n\t\t\t\tsetCalculatedTime={setCalculatedTime}\n\t\t\t\tamountOfCalculatedTime={amountOfCalculatedTime}\n\t\t\t\tsetAmountOfCalculatedTime={setAmountOfCalculatedTime}\n\t\t\t\tintervalHistory={intervalHistory}\n\t\t\t\tsetIntervalHistory={setIntervalHistory}\n\t\t\t/>\n\t\t</div>\t\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}