{"version":3,"sources":["index.js"],"names":["months","quarters","gdpCategories","salar2019","salar2018","salar2017","gdp2019","gdp2018","gdp2017","gdpStruct2019","gdpStruct2018","gdpStruct2017","ipi2019","ipi2018","ipi2017","createDataArray","periods","values","periodName","valueName","array","i","length","obj","push","dataSalar","dataGdp","dataGdpStruct","dataIpi","DataTable","props","table","row","salar","gdp","gdpStruct","ipi","year","header","key","typeData","buildSalarChart","data","am4core","am4themes_dark","am4themes_animated","chart","am4charts","categoryAxis","xAxes","dataFields","category","renderer","labels","template","rotation","hideOversized","minGridDistance","horizontalCenter","verticalCenter","tooltip","label","valueAxis","yAxes","title","text","fontWeight","series","valueY","categoryX","name","tooltipText","columns","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","stroke","adapter","add","fill","target","colors","getIndex","dataItem","index","cursor","lineX","lineY","buildGDPChart","map","item","next","numberFormatter","numberFormat","inversed","valueX","categoryY","propertyFields","column3D","buildGDPStructChart","hiddenState","properties","opacity","innerRadius","depth","legend","value","depthValue","slices","cornerRadius","step","buildIPIChart","grid","location","hoverState","states","create","tension","scrollbarX","App","state","changeYear","bind","e","this","setState","dataset","year2017Button","document","querySelector","year2018Button","year2019Button","mainHeader","classList","contains","remove","className","data-year","onClick","periodNamesArray","id","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.938c39c1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_dark from \"@amcharts/amcharts4/themes/dark\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\n//data\nconst months = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\nconst quarters = [\"I кв.\", \"II кв.\", \"III кв.\", \"IV кв.\"];\nconst gdpCategories = [\"Другие услуги\", \"Торговля и ремонт автотранспорта\", \"Сельское, лесное и рыбное хозяйство\", \"Перерабатывающая промышленность\", \"Налоги\", \"Транспорт, складское хозяйство, почтовая и куръерская доставка\", \"Операции с недвижимостью\", \"Образование\", \"Добывающая промышленность\"];\nconst salar2019 = [9223, 9429, 10237, 10269, 10239, 10783, 10971, 10537, 10687, 10727, 10679, 12264];\nconst salar2018 = [7711, 7828, 8382, 8480, 8725, 9141, 9170, 8977, 9042, 9218, 9161, 10573];\nconst salar2017 = [6008, 6209, 6752, 6659, 6840, 7360, 7339, 7114, 7351, 7377, 7479, 8777];\nconst gdp2019 = [807755, 927773, 1105520, 1176822];\nconst gdp2018 = [705013, 810820, 994850, 1048023];\nconst gdp2017 = [591008, 664760, 833130, 894022];\nconst gdpStruct2019 = [31.30, 13.15, 10.12, 10.07, 10.88, 8.14, 7.24, 4.68, 4.43];\nconst gdpStruct2018 = [30.66, 12.81, 10.87, 10.48, 10.73, 8.01, 7.08, 4.90, 4.46];\nconst gdpStruct2017 = [30.31, 12.80, 10.44, 10.79, 10.77, 8.21, 7.01, 5.14, 4.53];\n/* const ipi2019 = [86.2, 98.1, 112.0, 98.2, 99.5, 96.3, 103.6, 98.6, 101.7, 105.6, 95.4, 98.3];\nconst ipi2018 = [86.1, 96.5, 107.6, 95.0, 103.1, 100.2, 101.4, 99.5, 101.7, 110.0, 97.9, 98.3];\nconst ipi2017 = [82.5, 97.8, 108.9, 93.1, 103.4, 100.1, 100.3, 103.0, 102.5, 106.9, 100.3, 101.0]; */\nconst ipi2019 = [-13.8, -1.9, 12.0, -1.8, -0.5, -3.7, 3.6, -1.4, 1.7, 5.6, -4.6, -1.7];\nconst ipi2018 = [-13.9, -3.5, 7.6, -5.0, 3.1, 0.2, 1.4, -0.5, 1.7, 10.0, -2.1, -1.7];\nconst ipi2017 = [-17.5, -2.2, 8.9, -6.9, 3.4, 0.1, 0.3, 3.0, 2.5, 6.9, 0.3, 1.0];\n\n\nfunction createDataArray (periods, values, periodName, valueName) {\n    let array = [];\n\n    for (let i = 0; i < periods.length; i++) {\n        let obj = {\n            [periodName]: periods[i],\n            [valueName]: values[i]\n        };\n\n        array.push(obj);\n    }\n\n    return array;\n}\n\nlet dataSalar = createDataArray(months, salar2017, \"month\", \"salary\");\nlet dataGdp = createDataArray(quarters, gdp2017, \"quarter\", \"value\");\nlet dataGdpStruct = createDataArray(gdpCategories, gdpStruct2017, \"category\", \"value\");\nlet dataIpi = createDataArray(months, ipi2017, \"month\", \"value\");\n\nfunction DataTable(props) {\n    let table = [];\n    let row = \"\";\n    let salar = salar2017;\n    let gdp = gdp2017;\n    let gdpStruct = gdpStruct2017;\n    let ipi = ipi2017;\n\n    if (props.year === \"2017\") {\n        salar = salar2017;\n        gdp = gdp2017;\n        gdpStruct = gdpStruct2017;\n        ipi = ipi2017;\n    } else if (props.year === \"2018\") {\n        salar = salar2018;\n        gdp = gdp2018;\n        gdpStruct = gdpStruct2018;\n        ipi = ipi2018;\n    } else if (props.year === \"2019\") {\n        salar = salar2019;\n        gdp = gdp2019;\n        gdpStruct = gdpStruct2019;\n        ipi = ipi2019;\n    }\n\n    let header = (\n        <tr key={\"header\"}>\n            <th>{props.periodName}</th>\n            <th>{props.valueName}</th>\n        </tr>\n    );\n\n    table.push(header);\n\n    if (props.typeData === \"salary\") {\n        for(let i = 0; i < 12; i++) {\n            row = (\n                <tr key={salar[i]}>\n                    <td>{months[i]}</td>\n                    <td>{salar[i]}</td>\n                </tr>\n            )\n\n            table.push(row);\n        }\n\n        dataSalar = createDataArray(months, salar, \"month\", \"salary\");\n    } else if (props.typeData === \"gdp\") {\n        for(let i = 0; i < 4; i++) {\n            row = (\n                <tr key={gdp[i]}>\n                    <td>{quarters[i]}</td>\n                    <td>{gdp[i]}</td>\n                </tr>\n            )\n\n            table.push(row);\n        }\n\n        dataGdp = createDataArray(quarters, gdp, \"quarter\", \"value\");\n    } else if (props.typeData === \"gdpStruct\") {\n        for (let i = 0; i < gdpStruct.length; i++) {\n            row = (\n                <tr key={gdpStruct[i]}>\n                    <td>{gdpCategories[i]}</td>\n                    <td>{gdpStruct[i]}</td>\n                </tr>\n            );\n\n            table.push(row);\n        }\n\n        dataGdpStruct = createDataArray(gdpCategories, gdpStruct, \"category\", \"value\");\n    } else if (props.typeData === \"ipi\") {\n        for (let i = 0; i < 12; i++) {\n            row = (\n                <tr key={months[i]}>\n                    <td>{months[i]}</td>\n                    <td>{ipi[i]}</td>\n                </tr>\n            );\n\n            table.push(row);\n        }\n\n        dataIpi = createDataArray(months, ipi, \"month\", \"value\");\n    }\n\n    return <table><tbody>{table}</tbody></table>;\n}\n\n\nfunction buildSalarChart(data) {\n\n    // Themes begin\n    am4core.useTheme(am4themes_dark);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    \n    // Create chart instance\n    var chart = am4core.create(\"chartdivSalary\", am4charts.XYChart3D);\n\n    // Add data\n    chart.data = data;\n    \n    // Create axes\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"month\";\n    categoryAxis.renderer.labels.template.rotation = 270;\n    categoryAxis.renderer.labels.template.hideOversized = false;\n    categoryAxis.renderer.minGridDistance = 20;\n    categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n    categoryAxis.renderer.labels.template.verticalCenter = \"middle\";\n    categoryAxis.tooltip.label.rotation = 270;\n    categoryAxis.tooltip.label.horizontalCenter = \"right\";\n    categoryAxis.tooltip.label.verticalCenter = \"middle\";\n    \n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = \"Зарплата грн./мес.\";\n    valueAxis.title.fontWeight = \"bold\";\n    \n    // Create series\n    var series = chart.series.push(new am4charts.ColumnSeries3D());\n    series.dataFields.valueY = \"salary\";\n    series.dataFields.categoryX = \"month\";\n    series.name = \"Visits\";\n    series.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n    series.columns.template.fillOpacity = .6;\n    \n    var columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n    columnTemplate.stroke = am4core.color(\"#FFFFFF\");\n    \n    columnTemplate.adapter.add(\"fill\", function(fill, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    })\n    \n    columnTemplate.adapter.add(\"stroke\", function(stroke, target) {\n      return chart.colors.getIndex(target.dataItem.index);\n    })\n    \n    chart.cursor = new am4charts.XYCursor();\n    chart.cursor.lineX.strokeOpacity = 0;\n    chart.cursor.lineY.strokeOpacity = 0;\n\n    return chart;\n}\n\nfunction buildGDPChart(data) {\n\n    // Themes begin\n    am4core.useTheme(am4themes_dark);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n    \n    // Create chart instance\n    var chart = am4core.create(\"chartdivGDP\", am4charts.XYChart3D);\n    \n    // Add data\n    data = data.map(function(item) {\n        item[\"color\"] = chart.colors.next();\n\n        return item;\n      })\n    \n    chart.data = data;\n    \n    // Create axes\n    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"quarter\";\n    categoryAxis.numberFormatter.numberFormat = \"#\";\n    categoryAxis.renderer.inversed = true;\n    \n    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n    \n    valueAxis.title.text = \"ВВП млн. грн./квартал\";\n    \n    // Create series\n    var series = chart.series.push(new am4charts.ColumnSeries3D());\n    series.dataFields.valueX = \"value\";\n    series.dataFields.categoryY = \"quarter\";\n    series.name = \"Income\";\n    series.columns.template.propertyFields.fill = \"color\";\n    series.columns.template.tooltipText = \"{valueX}\";\n    series.columns.template.column3D.stroke = am4core.color(\"#fff\");\n    series.columns.template.column3D.strokeOpacity = 0.2;\n    \n};\n\nfunction buildGDPStructChart(data) {\n\n    // Themes begin\n    am4core.useTheme(am4themes_dark);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    var chart = am4core.create(\"chartdivGDPStruct\", am4charts.PieChart3D);\n    chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n\n    chart.data = data;\n\n    chart.innerRadius = am4core.percent(40);\n    chart.depth = 120;\n\n    chart.legend = new am4charts.Legend();\n\n    var series = chart.series.push(new am4charts.PieSeries3D());\n    series.dataFields.value = \"value\";\n    series.dataFields.depthValue = \"value\";\n    series.dataFields.category = \"category\";\n    series.slices.template.cornerRadius = 5;\n    series.colors.step = 3;\n\n}\n\nfunction buildIPIChart(data) {\n\n    // Themes begin\n    am4core.useTheme(am4themes_dark);\n    am4core.useTheme(am4themes_animated);\n    // Themes end\n\n    var chart = am4core.create(\"chartdivIPI\", am4charts.XYChart);\n    chart.hiddenState.properties.opacity = 0; // this makes initial fade in effect\n\n    chart.data = data;\n\n    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.dataFields.category = \"month\";\n    categoryAxis.renderer.minGridDistance = 40;\n\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.title.text = \"% относительно предыдущего месяца\";\n\n    var series = chart.series.push(new am4charts.CurvedColumnSeries());\n    series.dataFields.categoryX = \"month\";\n    series.dataFields.valueY = \"value\";\n    series.tooltipText = \"{valueY.value}\"\n    series.columns.template.strokeOpacity = 0;\n\n    series.columns.template.fillOpacity = 0.75;\n\n    var hoverState = series.columns.template.states.create(\"hover\");\n    hoverState.properties.fillOpacity = 1;\n    hoverState.properties.tension = 0.4;\n\n    chart.cursor = new am4charts.XYCursor();\n\n    // Add distinctive colors for each column using adapter\n    series.columns.template.adapter.add(\"fill\", function(fill, target) {\n    return chart.colors.getIndex(target.dataItem.index);\n    });\n\n    chart.scrollbarX = new am4core.Scrollbar();\n\n}\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"year\": \"2017\",\n        };\n\n        this.changeYear = this.changeYear.bind(this);\n    }\n\n    changeYear(e) {\n        this.setState({\n            \"year\": e.target.dataset.year,\n          });\n        \n        const year2017Button = document.querySelector('.year2017');\n        const year2018Button = document.querySelector('.year2018');\n        const year2019Button = document.querySelector('.year2019');\n        const mainHeader = document.querySelector('h1');\n        \n        if (e.target.classList.contains(\"year2017\")) {\n            year2017Button.classList.add('year2017-active');\n            year2018Button.classList.remove('year2018-active');\n            year2019Button.classList.remove('year2019-active');\n            mainHeader.classList.remove('header-2018', 'header-2019');\n            mainHeader.classList.add('header-2017');\n        } else if (e.target.classList.contains(\"year2018\")) {\n            year2017Button.classList.remove('year2017-active');\n            year2018Button.classList.add('year2018-active');\n            year2019Button.classList.remove('year2019-active');\n            mainHeader.classList.remove('header-2017', 'header-2019');\n            mainHeader.classList.add('header-2018');\n        } else if (e.target.classList.contains(\"year2019\")) {\n            year2017Button.classList.remove('year2017-active');\n            year2018Button.classList.remove('year2018-active');\n            year2019Button.classList.add('year2019-active');\n            mainHeader.classList.remove('header-2017', 'header-2018');\n            mainHeader.classList.add('header-2019');\n        }\n    }\n\n    componentDidMount() {\n        buildSalarChart(dataSalar);\n        buildGDPChart(dataGdp);\n        buildGDPStructChart(dataGdpStruct);\n        buildIPIChart(dataIpi);\n    }\n\n    componentDidUpdate() {\n        buildSalarChart(dataSalar);\n        buildGDPChart(dataGdp);\n        buildGDPStructChart(dataGdpStruct);\n        buildIPIChart(dataIpi);\n    }\n    \n    render() {\n\n        return (\n            <div>\n                <header>\n                    <h1 className=\"header-2017\">Средняя зарплата и ВВП в Украине</h1>\n                    <h2>Выберите год:</h2>\n                    <div className=\"year-buttons\">\n                        <div className=\"year-button year2017 year2017-active\" data-year=\"2017\" onClick={this.changeYear}>2017</div>\n                        <div className=\"year-button year2018\" data-year=\"2018\" onClick={this.changeYear}>2018</div>\n                        <div className=\"year-button year2019\" data-year=\"2019\" onClick={this.changeYear}>2019</div>\n                    </div>\n                </header>\n                <div className=\"average-salary-container\">\n                    <h2>Средняя зарплата в Украине за {this.state.year} год</h2>\n                    <div className=\"average-salary\">\n                        <DataTable year={this.state.year} periodName={\"Месяц\"} valueName={\"Зарплата грн./мес.\"} periodNamesArray={months} typeData={\"salary\"} />\n                        <div id=\"chartdivSalary\"></div>\n                    </div>\n                </div>\n                \n                <div className=\"gdp-struct-container\">\n                    <h2>Структура внутреннего валового продукта в Украине за {this.state.year} год</h2>\n                    <div className=\"gdp-struct\">\n                        <DataTable year={this.state.year} periodName={\"Категория\"} valueName={\"% от валового ВВП\"} periodNamesArray={gdpCategories} typeData={\"gdpStruct\"} />\n                        <div id=\"chartdivGDPStruct\"></div>\n                    </div>\n                </div>\n                <div className=\"ipi-container\">\n                    <h2>Индекс промышленного производства в Украине за {this.state.year} год</h2>\n                    <div className=\"ipi\">\n                        <DataTable year={this.state.year} periodName={\"Месяц\"} valueName={\"% относительно предыдущего месяца\"} periodNamesArray={months} typeData={\"ipi\"} />\n                        <div id=\"chartdivIPI\"></div>\n                    </div>\n                </div>\n                <div className=\"gdp-container\">\n                    <h2>Внутренний валовый продукт в Украине за {this.state.year} год.</h2>\n                    <div className=\"gdp\">\n                        <DataTable year={this.state.year} periodName={\"Квартал\"} valueName={\"ВВП млн. грн./квт.\"} periodNamesArray={quarters} typeData={\"gdp\"} />\n                        <div id=\"chartdivGDP\"></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}