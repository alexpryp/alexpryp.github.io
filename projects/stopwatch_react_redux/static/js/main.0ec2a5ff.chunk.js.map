{"version":3,"sources":["additionalFunctions.js","redux/reducer.js","redux/actionCreators.js","redux/actionTypes.js","App.js","index.js"],"names":["formatTime","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","Math","round","currentTime","Date","initialState","timerState","startTime","startLapTime","mainTimer","calculatedTime","amountOfCalculatedTime","buttonBlock","intervalHistory","setTimerState","newTimerState","type","payload","setStartTime","newStartTime","setStartLapTime","newStartLapTime","setMainTimer","newMainTimer","setCalculatedTime","newCalculatedTime","setAmountOfCalculatedTime","newAmountOfCalculatedTime","setButtonBlock","newButtonBlock","setIntervalHistory","newIntervalHistory","store","createStore","state","action","MainTimer","props","useEffect","timerId","setTimeout","time","clearTimeout","formTime","className","IntervalHistory","length","intervHist","map","index","ind","formMainTime","formLapTime","key","toString","aria-label","role","ButtonBlock","onClick","lap","intervalHandler","WrappedApp","connect","dispatch","bindActionCreators","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ec2a5ff.chunk.js","sourcesContent":["export function formatTime(date) {\r\n    let hours = date.getUTCHours();\r\n    let minutes = date.getUTCMinutes();\r\n    let seconds = date.getUTCSeconds();\r\n    let milliseconds = date.getUTCMilliseconds();\r\n\r\n    if (hours < 10) {\r\n        hours = '0' + hours;\r\n    }\r\n    if (minutes < 10) {\r\n        minutes = '0' + minutes;\r\n    }\r\n    if (seconds < 10) {\r\n        seconds = '0' + seconds;\r\n    }\r\n    if (milliseconds < 10) {\r\n        milliseconds = '0' + milliseconds;\r\n    } else if (milliseconds > 99) {\r\n        milliseconds = +Math.round(milliseconds / 10);\r\n        if (milliseconds === 100) {\r\n            milliseconds = 10;\r\n        }\r\n    }\r\n\r\n    return {hours, minutes, seconds, milliseconds};\r\n}","import {\r\n    SET_TIMER_STATE,\r\n    SET_START_TIME,\r\n    SET_START_LAP_TIME,\r\n    SET_MAIN_TIMER,\r\n    SET_CALCULATED_TIME,\r\n    SET_AMOUNT_OF_CALCULATED_TIME,\r\n    SET_BUTTON_BLOCK,\r\n    SET_INTERVAL_HISTORY\r\n} from \"./actionTypes.js\"\r\n\r\nconst currentTime = new Date();\r\n\r\nconst initialState = {\r\n    timerState: 'clean',\r\n    startTime: currentTime,\r\n    startLapTime: currentTime,\r\n    mainTimer: new Date(0),\r\n    calculatedTime: 0,\r\n    amountOfCalculatedTime: 0,\r\n    buttonBlock: 'start',\r\n    intervalHistory: []\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TIMER_STATE:\r\n            return { ...state, timerState: action.payload };\r\n        case SET_START_TIME:\r\n            return { ...state, startTime: action.payload };\r\n        case SET_START_LAP_TIME:\r\n            return { ...state, startLapTime: action.payload };\r\n        case SET_MAIN_TIMER:\r\n            return { ...state, mainTimer: action.payload };\r\n        case SET_CALCULATED_TIME:\r\n            return { ...state, calculatedTime: action.payload };\r\n        case SET_AMOUNT_OF_CALCULATED_TIME:\r\n            return { ...state, amountOfCalculatedTime: action.payload };\r\n        case SET_BUTTON_BLOCK:\r\n            return { ...state, buttonBlock: action.payload };\r\n        case SET_INTERVAL_HISTORY:\r\n            return { ...state, intervalHistory: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { \r\n    SET_TIMER_STATE,\r\n    SET_START_TIME,\r\n    SET_START_LAP_TIME,\r\n    SET_MAIN_TIMER,\r\n    SET_CALCULATED_TIME,\r\n    SET_AMOUNT_OF_CALCULATED_TIME,\r\n    SET_BUTTON_BLOCK,\r\n    SET_INTERVAL_HISTORY\r\n} from \"./actionTypes\";\r\n\r\nexport const setTimerState = (newTimerState) => {\r\n    return {\r\n        type: SET_TIMER_STATE,\r\n        payload: newTimerState\r\n    };\r\n};\r\n\r\nexport const setStartTime = (newStartTime) => {\r\n    return {\r\n        type: SET_START_TIME,\r\n        payload: newStartTime\r\n    };\r\n};\r\n\r\nexport const setStartLapTime = (newStartLapTime) => {\r\n    return {\r\n        type: SET_START_LAP_TIME,\r\n        payload: newStartLapTime\r\n    };\r\n}\r\n\r\nexport const setMainTimer = (newMainTimer) => {\r\n    return {\r\n        type: SET_MAIN_TIMER,\r\n        payload: newMainTimer\r\n    };\r\n}\r\n\r\nexport const setCalculatedTime = (newCalculatedTime) => {\r\n    return {\r\n        type: SET_CALCULATED_TIME,\r\n        payload: newCalculatedTime\r\n    };\r\n}\r\n\r\nexport const setAmountOfCalculatedTime = (newAmountOfCalculatedTime) => {\r\n    return {\r\n        type: SET_AMOUNT_OF_CALCULATED_TIME,\r\n        payload: newAmountOfCalculatedTime\r\n    };\r\n}\r\n\r\nexport const setButtonBlock = (newButtonBlock) => {\r\n    return {\r\n        type: SET_BUTTON_BLOCK,\r\n        payload: newButtonBlock\r\n    };\r\n}\r\n\r\nexport const setIntervalHistory = (newIntervalHistory) => {\r\n    return {\r\n        type: SET_INTERVAL_HISTORY,\r\n        payload: newIntervalHistory\r\n    };\r\n}","export const SET_TIMER_STATE = \"SET_TIMER_STATE\";\r\nexport const SET_START_TIME = 'SET_START_TIME';\r\nexport const SET_START_LAP_TIME = 'SET_START_LAP_TIME';\r\nexport const SET_MAIN_TIMER = 'SET_MAIN_TIMER';\r\nexport const SET_CALCULATED_TIME = 'SET_CALCULATED_TIME';\r\nexport const SET_AMOUNT_OF_CALCULATED_TIME = 'SET_AMOUNT_OF_CALCULATED_TIME';\r\nexport const SET_BUTTON_BLOCK = 'SET_BUTTON_BLOCK';\r\nexport const SET_INTERVAL_HISTORY = 'SET_INTERVAL_HISTORY';","import React, { useEffect } from 'react';\nimport { formatTime } from './additionalFunctions.js';\nimport { createStore, bindActionCreators } from 'redux';\nimport { connect, } from 'react-redux';\nimport { reducer } from './redux/reducer.js';\nimport {\n\tsetTimerState,\n\tsetStartTime,\n\tsetStartLapTime,\n\tsetMainTimer,\n\tsetCalculatedTime,\n\tsetAmountOfCalculatedTime,\n\tsetButtonBlock,\n\tsetIntervalHistory\n} from './redux/actionCreators.js';\n\nexport const store = createStore(reducer);\n\nfunction MainTimer(props) {\n\tuseEffect(() => {\n\t\tif (props.timerState === 'clean' || props.timerState === 'stop') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet timerId = setTimeout(() => {\n\t\t\tlet time = new Date() - props.startTime;\n\t\t\tprops.setCalculatedTime( time );\n\t\t\tprops.setMainTimer(\n\t\t\t\tnew Date(props.amountOfCalculatedTime + props.calculatedTime)\n\t\t\t);\n\t\t}, 200);\n\n\t\treturn function cleanup() {\n\t\t\tclearTimeout(timerId);\n\t\t} \n\t});\n\n\tlet formTime = formatTime(props.mainTimer);\n\n\treturn (\n\t\t\t<div className=\"main-timer\">\n\t\t\t\t<span>{formTime.hours}</span>:\n\t\t\t\t<span>{formTime.minutes}</span>:\n\t\t\t\t<span>{formTime.seconds}</span> <span className=\"milliseconds\">{formTime.milliseconds}</span>\n\t\t\t</div>\n\t);\n}\n\nfunction IntervalHistory(props) {\n\tlet intervalHistory = [...props.intervalHistory]\n\n\tif (intervalHistory.length > 0) {\n\t\tlet intervHist = intervalHistory.map((time, index) => {\n\t\t\tlet ind = index + 1;\n\t\t\tif(ind < 10) {\n\t\t\t\tind = '0' + ind;\n\t\t\t}\n\n\t\t\tlet formMainTime = formatTime(time[0]);\n\t\t\tlet formLapTime = formatTime(new Date(time[1]));\n\n\t\t\treturn (<div key={ind.toString()}>\n\t\t\t\t<span className=\"index\">{ind}</span> | <span className=\"main-timer-history\">\n\t\t\t\t\t<span>{formMainTime.hours}</span>:\n\t\t\t\t\t<span>{formMainTime.minutes}</span>:\n\t\t\t\t\t<span>{formMainTime.seconds}</span>:\n\t\t\t\t\t<span>{formMainTime.milliseconds}</span>\n\t\t\t\t</span> | <span className=\"lap-timer-history\">\n\t\t\t\t\t<span>{formLapTime.hours}</span>:\n\t\t\t\t\t<span>{formLapTime.minutes}</span>:\n\t\t\t\t\t<span>{formLapTime.seconds}</span>. <span className=\"milliseconds\">{formLapTime.milliseconds}</span>\n\t\t\t\t</span>\n\t\t\t</div>);\n\t\t});\n\t\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t{intervHist}\n\t\t\t</div>\n\t\t);\n\t} else if (props.buttonBlock === 'stop' || props.buttonBlock === 'restart') {\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t<div className=\"interval-history-background\">\n\t\t\t\t\t<span aria-label=\"Clock Face Two Oclock\" role=\"img\">&#x1F551;</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval-history-instructions\">\n\t\t\t\t\t<span>После нажатия кнопки \"Интервал\" появятся данные о времени, затраченном на каждый Интервал</span>\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"interval-history\">\n\t\t\t\t<div className=\"interval-history-background\">\n\t\t\t\t\t<span  aria-label=\"Clock Face Two Oclock\" role=\"img\">&#x1F551;</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"interval-history-instructions\">\n\t\t\t\t\t<span>После нажатия кнопки \"Начать\" секундомер начнет отсчет</span>\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction ButtonBlock(props) {\n\tconst setButtonBlock = props.setButtonBlock;\n\t\n\tfunction startHandler() {\n\t\tprops.setTimerState('start');\n\t\tprops.setStartTime(new Date());\n\t\tprops.setStartLapTime(props.mainTimer);\n\t\tprops.setButtonBlock(\"stop\");\n\t}\n\n\tfunction stopHandler() {\n\t\tprops.setTimerState('stop');\n\t\tprops.setButtonBlock(\"restart\");\n\t\tprops.setAmountOfCalculatedTime(props.amountOfCalculatedTime + props.calculatedTime);\n\t}\n\n\tfunction intervalHandler() {\n\t\tlet lap = props.mainTimer - props.startLapTime;\n\t\tprops.setStartLapTime(props.mainTimer);\n\t\tprops.setIntervalHistory([...props.intervalHistory, [props.mainTimer, lap]]);\n\t}\n\n\tfunction restartHandler() {\n\t\tprops.setTimerState('start');\n\t\tprops.setStartTime(new Date());\n\t\tprops.setButtonBlock(\"stop\");\n\t}\n\n\tfunction dischargeHandler() {\n\t\tprops.setButtonBlock(\"start\");\n\t\tprops.setAmountOfCalculatedTime(0);\n\t\tprops.setCalculatedTime(0);\n\t\tprops.setMainTimer(new Date(0));\n\t\tprops.setIntervalHistory([]);\n\t}\n\n\tswitch (props.buttonBlock) {\n\t\tcase ('stop'):\n\t\t\treturn (\n\t\t\t<div className=\"buttons-block\">\n\t\t\t\t<hr/>\n\t\t\t\t<button className=\"stop\" onClick={ () => stopHandler() }>\n\t\t\t\t\tСтоп\n\t\t\t\t</button>\n\t\t\t\t<button className=\"interval\" onClick={ () => intervalHandler() }>\n\t\t\t\t\tИнтервал\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t);\n\t\tcase ('restart'):\n\t\t\treturn (\n\t\t\t<div className=\"buttons-block\">\n\t\t\t\t<hr/>\n\t\t\t\t<button className=\"restart\" onClick={ () => restartHandler() }>\n\t\t\t\t\tРестарт\n\t\t\t\t</button>\n\t\t\t\t<button className=\"discharge\" onClick={ () => dischargeHandler(setButtonBlock) }>\n\t\t\t\t\tСброс\n\t\t\t\t</button>\n\t\t\t</div>);\n\t\tcase ('start'):\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\t<div className=\"buttons-block\">\n\t\t\t\t\t<hr/>\n\t\t\t\t\t<button className=\"start\" onClick={ () => startHandler() }>\n\t\t\t\t\t\tНачать\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nfunction App(props) {\n\tconst { \n\t    timerState,\n\t\tstartTime,\n\t\tstartLapTime,\n\t\tmainTimer,\n\t\tcalculatedTime,\n\t\tamountOfCalculatedTime,\n\t\tbuttonBlock,\n\t\tintervalHistory,\n\t\tsetTimerState,\n\t\tsetStartTime,\n\t\tsetStartLapTime,\n\t\tsetMainTimer,\n\t\tsetCalculatedTime,\n\t\tsetAmountOfCalculatedTime,\n\t\tsetButtonBlock,\n\t\tsetIntervalHistory\n\t} = props;\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<MainTimer \n\t\t\t\ttimerState={timerState}\n\t\t\t\tstartTime={startTime} \n\t\t\t\tmainTimer={mainTimer}\n\t\t\t\tsetMainTimer={setMainTimer}\n\t\t\t\tcalculatedTime={calculatedTime}\n\t\t\t\tsetCalculatedTime={setCalculatedTime}\n\t\t\t\tamountOfCalculatedTime={amountOfCalculatedTime}\n\t\t\t/>\n\t\t\t<IntervalHistory\n\t\t\t\tintervalHistory={intervalHistory}\n\t\t\t\tbuttonBlock={buttonBlock}\n\t\t\t/>\n\t\t\t<ButtonBlock\n\t\t\t\tbuttonBlock={buttonBlock}\n\t\t\t\tsetButtonBlock={setButtonBlock}\n\t\t\t\tsetTimerState={setTimerState}\n\t\t\t\tsetStartTime={setStartTime}\n\t\t\t\tstartLapTime={startLapTime}\n\t\t\t\tsetStartLapTime={setStartLapTime}\n\t\t\t\tmainTimer={mainTimer}\n\t\t\t\tsetMainTimer={setMainTimer}\n\t\t\t\tcalculatedTime={calculatedTime}\n\t\t\t\tsetCalculatedTime={setCalculatedTime}\n\t\t\t\tamountOfCalculatedTime={amountOfCalculatedTime}\n\t\t\t\tsetAmountOfCalculatedTime={setAmountOfCalculatedTime}\n\t\t\t\tintervalHistory={intervalHistory}\n\t\t\t\tsetIntervalHistory={setIntervalHistory}\n\t\t\t/>\n\t\t</div>\t\n\t);\n}\n\nconst putStateToProps = (state) => {\n\treturn {\n\t\ttimerState: state.timerState,\n\t\tstartTime: state.startTime,\n\t\tstartLapTime: state.startLapTime,\n\t\tmainTimer: state.mainTimer,\n\t\tcalculatedTime: state.calculatedTime,\n\t\tamountOfCalculatedTime: state.amountOfCalculatedTime,\n\t\tbuttonBlock: state.buttonBlock,\n\t\tintervalHistory: state.intervalHistory\n\t};\n};\n\nconst putActionsToProps = (dispatch) => {\n\treturn {\n\t\tsetTimerState: bindActionCreators(setTimerState, dispatch),\n\t\tsetStartTime: bindActionCreators(setStartTime, dispatch),\n\t\tsetStartLapTime: bindActionCreators(setStartLapTime, dispatch),\n\t\tsetMainTimer: bindActionCreators(setMainTimer, dispatch),\n\t\tsetCalculatedTime: bindActionCreators(setCalculatedTime, dispatch),\n\t\tsetAmountOfCalculatedTime: bindActionCreators(setAmountOfCalculatedTime, dispatch),\n\t\tsetButtonBlock: bindActionCreators(setButtonBlock, dispatch),\n\t\tsetIntervalHistory: bindActionCreators(setIntervalHistory, dispatch)\n\t}\n};\n\nexport const WrappedApp = connect(putStateToProps, putActionsToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { WrappedApp, store } from './App';\n\nReactDOM.render(\n\t<Provider store={store}>\n    <WrappedApp />\n  </Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}